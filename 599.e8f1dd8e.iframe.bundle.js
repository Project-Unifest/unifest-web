"use strict";(self.webpackChunkunifest_web=self.webpackChunkunifest_web||[]).push([[599],{"./node_modules/@vis.gl/react-google-maps/dist/index.modern.mjs":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{EW:()=>MapControl,HF:()=>ControlPosition,J8:()=>AdvancedMarker,T5:()=>Map,c4:()=>APIProvider});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/next/dist/compiled/react/index.js"),react_dom__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/next/dist/compiled/react-dom/index.js"),fast_deep_equal__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/fast-deep-equal/index.js"),fast_deep_equal__WEBPACK_IMPORTED_MODULE_2___default=__webpack_require__.n(fast_deep_equal__WEBPACK_IMPORTED_MODULE_2__),console=__webpack_require__("./node_modules/console-browserify/index.js");function _toPropertyKey(t){var i=function _toPrimitive(t,r){if("object"!=typeof t||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var i=e.call(t,r||"default");if("object"!=typeof i)return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===r?String:Number)(t)}(t,"string");return"symbol"==typeof i?i:String(i)}function _extends(){return _extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}function _objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}const APILoadingStatus={NOT_LOADED:"NOT_LOADED",LOADING:"LOADING",LOADED:"LOADED",FAILED:"FAILED",AUTH_FAILURE:"AUTH_FAILURE"};class GoogleMapsApiLoader{static async load(params,onLoadingStatusChange){var _window$google;const libraries=params.libraries?params.libraries.split(","):[],serializedParams=this.serializeParams(params);this.listeners.push(onLoadingStatusChange),null!=(_window$google=window.google)&&null!=(_window$google=_window$google.maps)&&_window$google.importLibrary?(this.serializedApiParams||(this.loadingStatus=APILoadingStatus.LOADED),this.notifyLoadingStatusListeners()):(this.serializedApiParams=serializedParams,this.initImportLibrary(params)),this.serializedApiParams&&this.serializedApiParams!==serializedParams&&console.warn("[google-maps-api-loader] The maps API has already been loaded with different parameters and will not be loaded again. Refresh the page for new values to have effect.");const librariesToLoad=["maps",...libraries];await Promise.all(librariesToLoad.map((name=>google.maps.importLibrary(name))))}static serializeParams(params){return[params.v,params.key,params.language,params.region,params.authReferrerPolicy,params.solutionChannel].join("/")}static initImportLibrary(params){if(window.google||(window.google={}),window.google.maps||(window.google.maps={}),window.google.maps.importLibrary)return void console.error("[google-maps-api-loader-internal]: initImportLibrary must only be called once");let apiPromise=null;const loadApi=()=>apiPromise||(apiPromise=new Promise(((resolve,reject)=>{var _document$querySelect;const scriptElement=document.createElement("script"),urlParams=new URLSearchParams;for(const[key,value]of Object.entries(params)){const urlParamName=key.replace(/[A-Z]/g,(t=>"_"+t[0].toLowerCase()));urlParams.set(urlParamName,value)}urlParams.set("loading","async"),urlParams.set("callback","__googleMapsCallback__"),scriptElement.async=!0,scriptElement.src="https://maps.googleapis.com/maps/api/js?"+urlParams.toString(),scriptElement.nonce=(null==(_document$querySelect=document.querySelector("script[nonce]"))?void 0:_document$querySelect.nonce)||"",scriptElement.onerror=()=>{this.loadingStatus=APILoadingStatus.FAILED,this.notifyLoadingStatusListeners(),reject(new Error("The Google Maps JavaScript API could not load."))},window.__googleMapsCallback__=()=>{this.loadingStatus=APILoadingStatus.LOADED,this.notifyLoadingStatusListeners(),resolve()},window.gm_authFailure=()=>{this.loadingStatus=APILoadingStatus.AUTH_FAILURE,this.notifyLoadingStatusListeners()},this.loadingStatus=APILoadingStatus.LOADING,this.notifyLoadingStatusListeners(),document.head.append(scriptElement)})),apiPromise);google.maps.importLibrary=libraryName=>loadApi().then((()=>google.maps.importLibrary(libraryName)))}static notifyLoadingStatusListeners(){for(const fn of this.listeners)fn(this.loadingStatus)}}GoogleMapsApiLoader.loadingStatus=APILoadingStatus.NOT_LOADED,GoogleMapsApiLoader.serializedApiParams=void 0,GoogleMapsApiLoader.listeners=[];const _excluded$3=["onLoad","apiKey","version","libraries"],_excluded2=["children"],APIProviderContext=react__WEBPACK_IMPORTED_MODULE_0__.createContext(null);const APIProvider=props=>{const{children}=props,loaderProps=_objectWithoutPropertiesLoose(props,_excluded2),{mapInstances,addMapInstance,removeMapInstance,clearMapInstances}=function useMapInstances(){const[mapInstances,setMapInstances]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)({});return{mapInstances,addMapInstance:(mapInstance,id="default")=>{setMapInstances((instances=>_extends({},instances,{[id]:mapInstance})))},removeMapInstance:(id="default")=>{setMapInstances((_ref=>_objectWithoutPropertiesLoose(_ref,[id].map(_toPropertyKey))))},clearMapInstances:()=>{setMapInstances({})}}}(),{status,loadedLibraries,importLibrary}=function useGoogleMapsApiLoader(props){const{onLoad,apiKey,version,libraries=[]}=props,otherApiParams=_objectWithoutPropertiesLoose(props,_excluded$3),[status,setStatus]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(GoogleMapsApiLoader.loadingStatus),[loadedLibraries,addLoadedLibrary]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useReducer)(((loadedLibraries,action)=>_extends({},loadedLibraries,{[action.name]:action.value})),{}),librariesString=(0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)((()=>null==libraries?void 0:libraries.join(",")),[libraries]),serializedParams=(0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)((()=>JSON.stringify(_extends({apiKey,version},otherApiParams))),[apiKey,version,otherApiParams]),importLibrary=(0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)((async name=>{var _google;if(loadedLibraries[name])return loadedLibraries[name];if(null==(_google=google)||null==(_google=_google.maps)||!_google.importLibrary)throw new Error("[api-provider-internal] importLibrary was called before google.maps.importLibrary was defined.");const res=await window.google.maps.importLibrary(name);return addLoadedLibrary({name,value:res}),res}),[loadedLibraries]);return(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)((()=>{(async()=>{try{const params=_extends({key:apiKey},otherApiParams);version&&(params.v=version),(null==librariesString?void 0:librariesString.length)>0&&(params.libraries=librariesString),await GoogleMapsApiLoader.load(params,(status=>setStatus(status)));for(const name of["core","maps",...libraries])await importLibrary(name);onLoad&&onLoad()}catch(error){console.error("<ApiProvider> failed to load Google Maps API",error)}})()}),[apiKey,librariesString,serializedParams]),{status,loadedLibraries,importLibrary}}(loaderProps),contextValue=(0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)((()=>({mapInstances,addMapInstance,removeMapInstance,clearMapInstances,status,loadedLibraries,importLibrary})),[mapInstances,addMapInstance,removeMapInstance,clearMapInstances,status,loadedLibraries,importLibrary]);return react__WEBPACK_IMPORTED_MODULE_0__.createElement(APIProviderContext.Provider,{value:contextValue},children)};function createMapEvent(type,map,srcEvent){const ev={type,map,detail:{},stoppable:!1,stop:()=>{}};if(cameraEventTypes.includes(type)){const camEvent=ev,center=map.getCenter(),zoom=map.getZoom(),heading=map.getHeading()||0,tilt=map.getTilt()||0,bounds=map.getBounds();return center&&bounds&&Number.isFinite(zoom)||console.warn("[createEvent] at least one of the values from the map returned undefined. This is not expected to happen. Please report an issue at https://github.com/visgl/react-google-maps/issues/new"),camEvent.detail={center:(null==center?void 0:center.toJSON())||{lat:0,lng:0},zoom:zoom||0,heading,tilt,bounds:(null==bounds?void 0:bounds.toJSON())||{north:90,east:180,south:-90,west:-180}},camEvent}if(mouseEventTypes.includes(type)){var _srcEvent$latLng;if(!srcEvent)throw new Error("[createEvent] mouse events must provide a srcEvent");const mouseEvent=ev;return mouseEvent.domEvent=srcEvent.domEvent,mouseEvent.stoppable=!0,mouseEvent.stop=()=>srcEvent.stop(),mouseEvent.detail={latLng:(null==(_srcEvent$latLng=srcEvent.latLng)?void 0:_srcEvent$latLng.toJSON())||null,placeId:srcEvent.placeId},mouseEvent}return ev}const propNameToEventType={onBoundsChanged:"bounds_changed",onCenterChanged:"center_changed",onClick:"click",onContextmenu:"contextmenu",onDblclick:"dblclick",onDrag:"drag",onDragend:"dragend",onDragstart:"dragstart",onHeadingChanged:"heading_changed",onIdle:"idle",onIsFractionalZoomEnabledChanged:"isfractionalzoomenabled_changed",onMapCapabilitiesChanged:"mapcapabilities_changed",onMapTypeIdChanged:"maptypeid_changed",onMousemove:"mousemove",onMouseout:"mouseout",onMouseover:"mouseover",onProjectionChanged:"projection_changed",onRenderingTypeChanged:"renderingtype_changed",onTilesLoaded:"tilesloaded",onTiltChanged:"tilt_changed",onZoomChanged:"zoom_changed",onCameraChanged:"bounds_changed"},cameraEventTypes=["bounds_changed","center_changed","heading_changed","projection_changed","tilt_changed","zoom_changed"],mouseEventTypes=["click","contextmenu","dblclick","mousemove","mouseout","mouseover"],eventPropNames=Object.keys(propNameToEventType);const mapOptionKeys=new Set(["backgroundColor","clickableIcons","controlSize","disableDefaultUI","disableDoubleClickZoom","draggable","draggableCursor","draggingCursor","fullscreenControl","fullscreenControlOptions","gestureHandling","isFractionalZoomEnabled","keyboardShortcuts","mapTypeControl","mapTypeControlOptions","mapTypeId","maxZoom","minZoom","noClear","panControl","panControlOptions","restriction","rotateControl","rotateControlOptions","scaleControl","scaleControlOptions","scrollwheel","streetView","streetViewControl","streetViewControlOptions","styles","zoomControl","zoomControlOptions"]);function useMapOptions(map,mapProps){const mapOptions={},keys=Object.keys(mapProps);for(const key of keys)mapOptionKeys.has(key)&&(mapOptions[key]=mapProps[key]);!function useDeepCompareEffect(effect,deps){const ref=(0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(void 0);ref.current&&fast_deep_equal__WEBPACK_IMPORTED_MODULE_2___default()(deps,ref.current)||(ref.current=deps),(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(effect,ref.current)}((()=>{map&&map.setOptions(mapOptions)}),[mapOptions])}function useApiLoadingStatus(){var _useContext;return(null==(_useContext=(0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(APIProviderContext))?void 0:_useContext.status)||APILoadingStatus.NOT_LOADED}function toLatLngLiteral(obj){return function isLatLngLiteral(obj){return!(!obj||"object"!=typeof obj)&&"lat"in obj&&"lng"in obj&&Number.isFinite(obj.lat)&&Number.isFinite(obj.lng)}(obj)?obj:obj.toJSON()}const AuthFailureMessage=()=>react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{style:{position:"absolute",top:0,left:0,bottom:0,right:0,zIndex:999,display:"flex",flexFlow:"column nowrap",textAlign:"center",justifyContent:"center",fontSize:".8rem",color:"rgba(0,0,0,0.6)",background:"#dddddd",padding:"1rem 1.5rem"}},react__WEBPACK_IMPORTED_MODULE_0__.createElement("h2",null,"Error: AuthFailure"),react__WEBPACK_IMPORTED_MODULE_0__.createElement("p",null,"A problem with your API key prevents the map from rendering correctly. Please make sure the value of the ",react__WEBPACK_IMPORTED_MODULE_0__.createElement("code",null,"APIProvider.apiKey")," prop is correct. Check the error-message in the console for further details."));function useApiIsLoaded(){return useApiLoadingStatus()===APILoadingStatus.LOADED}function useTrackedCameraStateRef(map){const forceUpdate=function useForceUpdate(){const[,forceUpdate]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useReducer)((x=>x+1),0);return forceUpdate}(),ref=(0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)({center:{lat:0,lng:0},heading:0,tilt:0,zoom:0});return(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)((()=>{if(!map)return;const listener=google.maps.event.addListener(map,"bounds_changed",(()=>{!function handleBoundsChange(map,ref){const center=map.getCenter(),zoom=map.getZoom(),heading=map.getHeading()||0,tilt=map.getTilt()||0,bounds=map.getBounds();center&&bounds&&Number.isFinite(zoom)||console.warn("[useTrackedCameraState] at least one of the values from the map returned undefined. This is not expected to happen. Please report an issue at https://github.com/visgl/react-google-maps/issues/new"),Object.assign(ref.current,{center:(null==center?void 0:center.toJSON())||{lat:0,lng:0},zoom:zoom||0,heading,tilt})}(map,ref),forceUpdate()}));return()=>listener.remove()}),[map,forceUpdate]),ref}const _excluded$2=["id","defaultBounds","defaultCenter","defaultZoom","defaultHeading","defaultTilt"];function useMapInstance(props,context){const apiIsLoaded=useApiIsLoaded(),[map,setMap]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null),[container,containerRef]=function useCallbackRef(){const[el,setEl]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null);return[el,(0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)((value=>setEl(value)),[setEl])]}(),cameraStateRef=useTrackedCameraStateRef(map),{id,defaultBounds,defaultCenter,defaultZoom,defaultHeading,defaultTilt}=props,mapOptions=_objectWithoutPropertiesLoose(props,_excluded$2),hasZoom=void 0!==props.zoom||void 0!==props.defaultZoom,hasCenter=void 0!==props.center||void 0!==props.defaultCenter;defaultBounds||hasZoom&&hasCenter||console.warn("<Map> component is missing configuration. You have to provide zoom and center (via the `zoom`/`defaultZoom` and `center`/`defaultCenter` props) or specify the region to show using `defaultBounds`. See https://visgl.github.io/react-google-maps/docs/api-reference/components/map#required"),!mapOptions.center&&defaultCenter&&(mapOptions.center=defaultCenter),!mapOptions.zoom&&Number.isFinite(defaultZoom)&&(mapOptions.zoom=defaultZoom),!mapOptions.heading&&Number.isFinite(defaultHeading)&&(mapOptions.heading=defaultHeading),!mapOptions.tilt&&Number.isFinite(defaultTilt)&&(mapOptions.tilt=defaultTilt);for(const key of Object.keys(mapOptions))void 0===mapOptions[key]&&delete mapOptions[key];const savedMapStateRef=(0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)();return(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)((()=>{if(!container||!apiIsLoaded)return;const{addMapInstance,removeMapInstance}=context,mapId=props.mapId,newMap=new google.maps.Map(container,mapOptions);if(setMap(newMap),addMapInstance(newMap,id),defaultBounds?newMap.fitBounds(defaultBounds):hasZoom&&hasCenter||newMap.fitBounds({east:180,west:-180,south:-90,north:90}),savedMapStateRef.current){const{mapId:savedMapId,cameraState:savedCameraState}=savedMapStateRef.current;savedMapId!==mapId&&newMap.setOptions(savedCameraState)}return()=>{savedMapStateRef.current={mapId,cameraState:cameraStateRef.current},google.maps.event.clearInstanceListeners(newMap),setMap(null),removeMapInstance(id)}}),[container,apiIsLoaded,id,props.mapId]),[map,containerRef,cameraStateRef]}const GoogleMapsContext=react__WEBPACK_IMPORTED_MODULE_0__.createContext(null),Map=props=>{const{children,id,className,style}=props,context=(0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(APIProviderContext),loadingStatus=useApiLoadingStatus();if(!context)throw new Error("<Map> can only be used inside an <ApiProvider> component.");const[map,mapRef,cameraStateRef]=useMapInstance(props,context);!function useMapCameraParams(map,cameraStateRef,mapProps){const center=mapProps.center?toLatLngLiteral(mapProps.center):null;let lat=null,lng=null;center&&Number.isFinite(center.lat)&&Number.isFinite(center.lng)&&(lat=center.lat,lng=center.lng);const zoom=Number.isFinite(mapProps.zoom)?mapProps.zoom:null,heading=Number.isFinite(mapProps.heading)?mapProps.heading:null,tilt=Number.isFinite(mapProps.tilt)?mapProps.tilt:null;(0,react__WEBPACK_IMPORTED_MODULE_0__.useLayoutEffect)((()=>{if(!map)return;const nextCamera={};let needsUpdate=!1;null===lat||null===lng||cameraStateRef.current.center.lat===lat&&cameraStateRef.current.center.lng===lng||(nextCamera.center={lat,lng},needsUpdate=!0),null!==zoom&&cameraStateRef.current.zoom!==zoom&&(nextCamera.zoom=zoom,needsUpdate=!0),null!==heading&&cameraStateRef.current.heading!==heading&&(nextCamera.heading=heading,needsUpdate=!0),null!==tilt&&cameraStateRef.current.tilt!==tilt&&(nextCamera.tilt=tilt,needsUpdate=!0),needsUpdate&&map.moveCamera(nextCamera)}))}(map,cameraStateRef,props),function useMapEvents(map,props){for(const propName of eventPropNames){const handler=props[propName],eventType=propNameToEventType[propName];(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)((()=>{if(!map)return;if(!handler)return;const listener=google.maps.event.addListener(map,eventType,(ev=>{handler(createMapEvent(eventType,map,ev))}));return()=>listener.remove()}),[map,eventType,handler])}}(map,props),useMapOptions(map,props);const isDeckGlControlled=function useDeckGLCameraUpdate(map,props){const{viewport,viewState}=props,isDeckGlControlled=!!viewport;return(0,react__WEBPACK_IMPORTED_MODULE_0__.useLayoutEffect)((()=>{if(!map||!viewState)return;const{latitude,longitude,bearing:heading,pitch:tilt,zoom}=viewState;map.moveCamera({center:{lat:latitude,lng:longitude},heading,tilt,zoom:zoom+1})}),[map,viewState]),isDeckGlControlled}(map,props),isControlledExternally=!!props.controlled;(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)((()=>{if(map)return isDeckGlControlled&&map.setOptions({disableDefaultUI:!0}),(isDeckGlControlled||isControlledExternally)&&map.setOptions({gestureHandling:"none",keyboardShortcuts:!1}),()=>{map.setOptions({gestureHandling:props.gestureHandling,keyboardShortcuts:props.keyboardShortcuts})}}),[map,isDeckGlControlled,isControlledExternally,props.gestureHandling,props.keyboardShortcuts]);const center=props.center?toLatLngLiteral(props.center):null;let lat=null,lng=null;center&&Number.isFinite(center.lat)&&Number.isFinite(center.lng)&&(lat=center.lat,lng=center.lng);const cameraOptions=(0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)((()=>{var _lat,_lng,_props$zoom,_props$heading,_props$tilt;return{center:{lat:null!=(_lat=lat)?_lat:0,lng:null!=(_lng=lng)?_lng:0},zoom:null!=(_props$zoom=props.zoom)?_props$zoom:0,heading:null!=(_props$heading=props.heading)?_props$heading:0,tilt:null!=(_props$tilt=props.tilt)?_props$tilt:0}}),[lat,lng,props.zoom,props.heading,props.tilt]);(0,react__WEBPACK_IMPORTED_MODULE_0__.useLayoutEffect)((()=>{if(!map||!isControlledExternally)return;map.moveCamera(cameraOptions);const listener=map.addListener("bounds_changed",(()=>{map.moveCamera(cameraOptions)}));return()=>listener.remove()}),[map,isControlledExternally,cameraOptions]);const combinedStyle=(0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)((()=>_extends({width:"100%",height:"100%",zIndex:isDeckGlControlled?-1:0},style)),[style,isDeckGlControlled]),contextValue=(0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)((()=>({map})),[map]);return loadingStatus===APILoadingStatus.AUTH_FAILURE?react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{style:_extends({position:"relative"},className?{}:combinedStyle),className},react__WEBPACK_IMPORTED_MODULE_0__.createElement(AuthFailureMessage,null)):react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",_extends({ref:mapRef,"data-testid":"map",style:className?void 0:combinedStyle,className},id?{id}:{}),map?react__WEBPACK_IMPORTED_MODULE_0__.createElement(GoogleMapsContext.Provider,{value:contextValue},children):null)};Map.deckGLViewProps=!0;const shownMessages=new Set;function logErrorOnce(...args){const key=JSON.stringify(args);shownMessages.has(key)||(shownMessages.add(key),console.error(...args))}const useMap=(id=null)=>{const ctx=(0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(APIProviderContext),{map}=(0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(GoogleMapsContext)||{};if(null===ctx)return logErrorOnce("useMap(): failed to retrieve APIProviderContext. Make sure that the <APIProvider> component exists and that the component you are calling `useMap()` from is a sibling of the <APIProvider>."),null;const{mapInstances}=ctx;return null!==id?mapInstances[id]||null:map||(mapInstances.default||null)};const AdvancedMarkerContext=react__WEBPACK_IMPORTED_MODULE_0__.createContext(null);function useAdvancedMarker(props){const[marker,setMarker]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null),[contentContainer,setContentContainer]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null),map=useMap(),markerLibrary=function useMapsLibrary(name){const apiIsLoaded=useApiIsLoaded(),ctx=(0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(APIProviderContext);return(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)((()=>{apiIsLoaded&&ctx&&ctx.importLibrary(name)}),[apiIsLoaded,ctx,name]),(null==ctx?void 0:ctx.loadedLibraries[name])||null}("marker"),{children,className,onClick,onDrag,onDragStart,onDragEnd,collisionBehavior,draggable,position,title,zIndex}=props,numChilds=react__WEBPACK_IMPORTED_MODULE_0__.Children.count(children);return(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)((()=>{if(!map||!markerLibrary)return;const newMarker=new markerLibrary.AdvancedMarkerElement;if(newMarker.map=map,setMarker(newMarker),numChilds>0){const el=document.createElement("div");className&&(el.className=className),newMarker.content=el,setContentContainer(el)}return()=>{newMarker.map=null,setMarker(null),setContentContainer(null)}}),[map,markerLibrary,numChilds]),(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)((()=>{contentContainer&&(contentContainer.className=null!=className?className:"")}),[contentContainer,className]),(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)((()=>{if(!marker)return;const gme=google.maps.event;onClick&&gme.addListener(marker,"click",onClick),onDrag&&gme.addListener(marker,"drag",onDrag),onDragStart&&gme.addListener(marker,"dragstart",onDragStart),onDragEnd&&gme.addListener(marker,"dragend",onDragEnd),(onDrag||onDragStart||onDragEnd)&&!draggable&&console.warn("You need to set the marker to draggable to listen to drag-events.");const m=marker;return()=>{gme.clearInstanceListeners(m)}}),[marker,draggable,onClick,onDragStart,onDrag,onDragEnd]),(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)((()=>{marker&&(void 0!==position&&(marker.position=position),void 0!==draggable&&(marker.gmpDraggable=draggable),void 0!==collisionBehavior&&(marker.collisionBehavior=collisionBehavior),void 0!==zIndex&&(marker.zIndex=zIndex),"string"==typeof title&&(marker.title=title))}),[marker,position,draggable,collisionBehavior,zIndex,title]),[marker,contentContainer]}const AdvancedMarker=(0,react__WEBPACK_IMPORTED_MODULE_0__.forwardRef)(((props,ref)=>{const{children}=props,[marker,contentContainer]=useAdvancedMarker(props),advancedMarkerContextValue=(0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)((()=>marker?{marker}:null),[marker]);return(0,react__WEBPACK_IMPORTED_MODULE_0__.useImperativeHandle)(ref,(()=>marker),[marker]),marker?react__WEBPACK_IMPORTED_MODULE_0__.createElement(AdvancedMarkerContext.Provider,{value:advancedMarkerContextValue},null!==contentContainer&&(0,react_dom__WEBPACK_IMPORTED_MODULE_1__.createPortal)(children,contentContainer)):null}));const ControlPosition={TOP_LEFT:1,TOP_CENTER:2,TOP:2,TOP_RIGHT:3,LEFT_CENTER:4,LEFT_TOP:5,LEFT:5,LEFT_BOTTOM:6,RIGHT_TOP:7,RIGHT:7,RIGHT_CENTER:8,RIGHT_BOTTOM:9,BOTTOM_LEFT:10,BOTTOM_CENTER:11,BOTTOM:11,BOTTOM_RIGHT:12,CENTER:13,BLOCK_START_INLINE_START:14,BLOCK_START_INLINE_CENTER:15,BLOCK_START_INLINE_END:16,INLINE_START_BLOCK_CENTER:17,INLINE_START_BLOCK_START:18,INLINE_START_BLOCK_END:19,INLINE_END_BLOCK_START:20,INLINE_END_BLOCK_CENTER:21,INLINE_END_BLOCK_END:22,BLOCK_END_INLINE_START:23,BLOCK_END_INLINE_CENTER:24,BLOCK_END_INLINE_END:25},MapControl=({children,position})=>{const controlContainer=(0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)((()=>document.createElement("div")),[]),map=useMap();return(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)((()=>{if(!map)return;const controls=map.controls[position];return controls.push(controlContainer),()=>{const controlsArray=controls.getArray();if(!controlsArray)return;const index=controlsArray.indexOf(controlContainer);controls.removeAt(index)}}),[controlContainer,map,position]),(0,react_dom__WEBPACK_IMPORTED_MODULE_1__.createPortal)(children,controlContainer)},_excluded=["onClick","onDrag","onDragStart","onDragEnd","onMouseOver","onMouseOut"];(0,react__WEBPACK_IMPORTED_MODULE_0__.forwardRef)(((props,ref)=>{const marker=function useMarker(props){const[marker,setMarker]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null),map=useMap(),{onClick,onDrag,onDragStart,onDragEnd,onMouseOver,onMouseOut}=props,markerOptions=_objectWithoutPropertiesLoose(props,_excluded),{position,draggable}=markerOptions;return(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)((()=>{if(!map)return void(void 0===map&&console.error("<Marker> has to be inside a Map component."));const newMarker=new google.maps.Marker(markerOptions);return newMarker.setMap(map),setMarker(newMarker),()=>{newMarker.setMap(null),setMarker(null)}}),[map]),(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)((()=>{if(!marker)return;const m=marker,gme=google.maps.event;return onClick&&gme.addListener(m,"click",onClick),onDrag&&gme.addListener(m,"drag",onDrag),onDragStart&&gme.addListener(m,"dragstart",onDragStart),onDragEnd&&gme.addListener(m,"dragend",onDragEnd),onMouseOver&&gme.addListener(m,"mouseover",onMouseOver),onMouseOut&&gme.addListener(m,"mouseout",onMouseOut),marker.setDraggable(Boolean(draggable)),()=>{gme.clearInstanceListeners(m)}}),[marker,draggable,onClick,onDrag,onDragStart,onDragEnd,onMouseOver,onMouseOut]),(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)((()=>{marker&&markerOptions&&marker.setOptions(markerOptions)}),[marker,markerOptions]),(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)((()=>{!draggable&&position&&marker&&marker.setPosition(position)}),[draggable,position,marker]),marker}(props);return(0,react__WEBPACK_IMPORTED_MODULE_0__.useImperativeHandle)(ref,(()=>marker),[marker]),react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment,null)}))},"./node_modules/fast-deep-equal/index.js":module=>{module.exports=function equal(a,b){if(a===b)return!0;if(a&&b&&"object"==typeof a&&"object"==typeof b){if(a.constructor!==b.constructor)return!1;var length,i,keys;if(Array.isArray(a)){if((length=a.length)!=b.length)return!1;for(i=length;0!=i--;)if(!equal(a[i],b[i]))return!1;return!0}if(a.constructor===RegExp)return a.source===b.source&&a.flags===b.flags;if(a.valueOf!==Object.prototype.valueOf)return a.valueOf()===b.valueOf();if(a.toString!==Object.prototype.toString)return a.toString()===b.toString();if((length=(keys=Object.keys(a)).length)!==Object.keys(b).length)return!1;for(i=length;0!=i--;)if(!Object.prototype.hasOwnProperty.call(b,keys[i]))return!1;for(i=length;0!=i--;){var key=keys[i];if(!equal(a[key],b[key]))return!1}return!0}return a!=a&&b!=b}}}]);