{
  "openapi": "3.0.1",
  "info": {
    "title": "유니페스(unifest) 백엔드 API 명세",
    "description": "springdoc을 이용한 Swagger API 문서입니다.",
    "contact": {
      "name": "springdoc 공식문서",
      "url": "https://springdoc.org/"
    },
    "version": "1.0"
  },
  "servers": [
    {
      "url": "/",
      "description": "Default Server URL"
    }
  ],
  "tags": [
    {
      "name": "인증",
      "description": "로그인 관련 API"
    }
  ],
  "paths": {
    "/waiting": {
      "put": {
        "tags": ["waiting-controller"],
        "summary": "사용자 측의 웨이팅 취소",
        "operationId": "cancelWaiting",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CancelWaitingRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseWaitingInfo"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["waiting-controller"],
        "summary": "웨이팅 추가",
        "operationId": "addWaiting",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PostWaitingRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseWaitingInfo"
                }
              }
            }
          }
        }
      }
    },
    "/waiting/{waitingId}/noshow": {
      "put": {
        "tags": ["waiting-controller"],
        "summary": "관리자가 예약 부재 처리",
        "operationId": "noshowWaiting",
        "parameters": [
          {
            "name": "waitingId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseWaitingInfo"
                }
              }
            }
          }
        }
      }
    },
    "/waiting/{waitingId}/complete": {
      "put": {
        "tags": ["waiting-controller"],
        "summary": "관리자의 입장 처리 완료",
        "operationId": "completeWaiting",
        "parameters": [
          {
            "name": "waitingId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseWaitingInfo"
                }
              }
            }
          }
        }
      }
    },
    "/waiting/{waitingId}/call": {
      "put": {
        "tags": ["waiting-controller"],
        "summary": "관리자가 예약 호출",
        "operationId": "callWaiting",
        "parameters": [
          {
            "name": "waitingId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseWaitingInfo"
                }
              }
            }
          }
        }
      }
    },
    "/fcm-token": {
      "put": {
        "tags": ["fcm-controller"],
        "operationId": "saveOrUpdateFcmToken",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PostFcmRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseString"
                }
              }
            }
          }
        }
      }
    },
    "/api/menus/{menu-id}/status": {
      "put": {
        "tags": ["menu-controller"],
        "summary": "메뉴 재고 상태 변경",
        "operationId": "changeMenuStatus",
        "parameters": [
          {
            "name": "menu-id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MenuStatusChangeRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseVoid"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/waiting/{boothId}/waitingEnabled": {
      "post": {
        "tags": ["waiting-controller"],
        "summary": "부스 웨이팅 불/가 변경",
        "operationId": "changeBoothWaitingEnabled",
        "parameters": [
          {
            "name": "boothId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBoolean"
                }
              }
            }
          }
        }
      }
    },
    "/waiting/tokenTest": {
      "get": {
        "tags": ["waiting-controller"],
        "summary": "토큰 테스트",
        "operationId": "tokenTest2",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseString"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["waiting-controller"],
        "summary": "토큰 테스트",
        "operationId": "tokenTest",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PostTokenTestRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseString"
                }
              }
            }
          }
        }
      }
    },
    "/waiting/pin/{booth-id}": {
      "get": {
        "tags": ["waiting-controller"],
        "summary": "Pin 번호 받기",
        "operationId": "getPin",
        "parameters": [
          {
            "name": "booth-id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseString"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      },
      "post": {
        "tags": ["waiting-controller"],
        "summary": "Pin 발급/재발급",
        "operationId": "createPin",
        "parameters": [
          {
            "name": "booth-id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseString"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/waiting/pin/check": {
      "post": {
        "tags": ["waiting-controller"],
        "summary": "Pin 번호 확인",
        "operationId": "checkPin",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CheckPinRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseLong"
                }
              }
            }
          }
        }
      }
    },
    "/star": {
      "get": {
        "tags": ["star-controller"],
        "summary": "모든 star 목록 조회",
        "operationId": "findAllStars",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseListStarInfo"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["star-controller"],
        "summary": "Star 정보 생성",
        "operationId": "createStar",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PostStarRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseLong"
                }
              }
            }
          }
        }
      }
    },
    "/stamps": {
      "get": {
        "tags": ["stamp-controller"],
        "summary": "Stamp 조회 (deviceId별)",
        "operationId": "getStamp",
        "parameters": [
          {
            "name": "deviceId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "festivalId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseListStampRecordResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["stamp-controller"],
        "summary": "Stamp 추가",
        "operationId": "addStamp",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StampRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseLong"
                }
              }
            }
          }
        }
      }
    },
    "/stamps/festival": {
      "post": {
        "tags": ["stamp-controller"],
        "summary": "페스티벌 스탬프 정보 생성",
        "operationId": "createStampInfo",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StampInfoCreateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseLong"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/school": {
      "post": {
        "tags": ["school-controller"],
        "operationId": "createSchool",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PostSchoolRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseLong"
                }
              }
            }
          }
        }
      }
    },
    "/reissue": {
      "post": {
        "tags": ["인증"],
        "summary": "액세스토큰 재발급",
        "operationId": "reissue",
        "parameters": [
          {
            "name": "RefreshToken",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "성공",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TokenResponse"
                }
              }
            }
          },
          "401": {
            "description": "만료된 리프레시 토큰입니다. (RefreshTokenExpiredException) [에러 코드: 2003]"
          }
        }
      }
    },
    "/members": {
      "get": {
        "tags": ["member-controller"],
        "summary": "role 별 멤버 목록 조회 (parameter 생략 시 멤버 전부 조회)",
        "operationId": "getMembers",
        "parameters": [
          {
            "name": "role",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["DEV", "ADMIN", "PENDING", "VERIFIED", "DENIED"]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseListMemberDetailResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      },
      "post": {
        "tags": ["member-controller"],
        "summary": "회원가입",
        "operationId": "postMember",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MemberSignUpRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseLong"
                }
              }
            }
          }
        }
      }
    },
    "/megaphone": {
      "post": {
        "tags": ["megaphone-controller"],
        "summary": "확성기 공지 메세지 등록",
        "operationId": "postAnnouncement",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddMegaphoneRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseLong"
                }
              }
            }
          }
        }
      }
    },
    "/login": {
      "post": {
        "tags": ["인증"],
        "summary": "로그인",
        "description": "이메일과 비밀번호로 로그인합니다.",
        "operationId": "login",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "401": {
            "description": "인증 실패"
          },
          "200": {
            "description": "성공",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TokenResponse"
                }
              }
            }
          }
        }
      }
    },
    "/images": {
      "post": {
        "tags": ["file-controller"],
        "operationId": "uploadFile",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            },
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseFileResponse"
                }
              }
            }
          }
        }
      }
    },
    "/festival": {
      "get": {
        "tags": ["festival-controller"],
        "summary": "학교명 검색",
        "operationId": "getFestivalByName",
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseListFestivalSearchResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["festival-controller"],
        "summary": "축제 등록",
        "operationId": "postFestival",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PostFestivalRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseLong"
                }
              }
            }
          }
        }
      }
    },
    "/festival/{festival-id}/interest": {
      "post": {
        "tags": ["interest-controller"],
        "summary": "관심 축제 등록",
        "description": "사용자가 특정 축제에 대해 관심을 등록합니다. 관심 등록 시 해당 축제에 대한 푸시 알림 구독이 추가됩니다.",
        "operationId": "postInterest",
        "parameters": [
          {
            "name": "festival-id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InterestRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "관심 축제 등록에 성공했습니다.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseVoid"
                }
              }
            }
          },
          "404": {
            "description": "해당 축제가 존재하지 않습니다. (FestivalNotFoundException) [에러 코드: 4001]",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "이미 이 디바이스로 관심 등록한 축제입니다. (InterestAlreadyExistsException) [에러 코드: 4002]",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["interest-controller"],
        "summary": "관심 축제 해제",
        "description": "사용자가 특정 축제에 대한 관심을 해제합니다. 해제 시 해당 축제에 대한 푸시 알림 구독이 취소됩니다.",
        "operationId": "deleteInterest",
        "parameters": [
          {
            "name": "festival-id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InterestRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "404": {
            "description": "해당 디바이스의 해당 축제에 대한 관심이 존재하지 않습니다. (InterestNotFoundException) [에러 코드: 4003]",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "관심 축제 해제에 성공했습니다.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseVoid"
                }
              }
            }
          }
        }
      }
    },
    "/enroll": {
      "post": {
        "tags": ["enroll-controller"],
        "summary": "festival:star enroll 정보 생성",
        "operationId": "createEnroll",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PostEnrollRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseLong"
                }
              }
            }
          }
        }
      }
    },
    "/api/menus/{booth-id}": {
      "post": {
        "tags": ["menu-controller"],
        "summary": "메뉴 추가",
        "operationId": "createMenu",
        "parameters": [
          {
            "name": "booth-id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MenuCreateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseLong"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/likes": {
      "get": {
        "tags": ["likes-controller"],
        "summary": "특정 사용자가 좋아요한 부스 목록 조회",
        "operationId": "getLikedBooths",
        "parameters": [
          {
            "name": "token",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseListLikedBoothResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["likes-controller"],
        "summary": "좋아요 생성",
        "operationId": "postLike",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PostLikesRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseLong"
                }
              }
            }
          }
        }
      }
    },
    "/api/booths": {
      "get": {
        "tags": ["booth-controller"],
        "summary": "상위 5개 부스 확인",
        "operationId": "getLikes",
        "parameters": [
          {
            "name": "festivalId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseListBoothResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["booth-controller"],
        "summary": "부스 생성",
        "operationId": "postBooth",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BoothCreateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseLong"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/admin/booth/{booth_id}": {
      "post": {
        "tags": ["admin-controller"],
        "summary": "부스 주인 변경",
        "operationId": "changeBoothOwner",
        "parameters": [
          {
            "name": "booth_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "new",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseVoid"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/stamps/{booth-id}/stampEnabled": {
      "patch": {
        "tags": ["stamp-controller"],
        "summary": "Booth StampEnabled 바꾸기",
        "operationId": "switchStampEnabled",
        "parameters": [
          {
            "name": "booth-id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StampEnabledRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBoolean"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/members/{member-id}": {
      "get": {
        "tags": ["member-controller"],
        "summary": "member id로 회원 정보 조회",
        "operationId": "getMember",
        "parameters": [
          {
            "name": "member-id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseMemberDetailResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      },
      "delete": {
        "tags": ["member-controller"],
        "summary": "관리자가 회원 삭제",
        "operationId": "withDrawMember",
        "parameters": [
          {
            "name": "member-id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseLong"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      },
      "patch": {
        "tags": ["member-controller"],
        "summary": "회원역할 변경",
        "operationId": "patchMemberRole",
        "parameters": [
          {
            "name": "member-id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "role",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": ["DEV", "ADMIN", "PENDING", "VERIFIED", "DENIED"]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseLong"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/members/my/password": {
      "patch": {
        "tags": ["member-controller"],
        "summary": "본인 비밀번호 수정",
        "operationId": "changePassword",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PasswordChangeRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseVoid"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/festival/{festival-id}": {
      "delete": {
        "tags": ["festival-controller"],
        "summary": "축제 삭제",
        "operationId": "deleteBooth",
        "parameters": [
          {
            "name": "festival-id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseVoid"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      },
      "patch": {
        "tags": ["festival-controller"],
        "summary": "축제 수정",
        "operationId": "modifyFestival",
        "parameters": [
          {
            "name": "festival-id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FestivalModifyRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseLong"
                }
              }
            }
          }
        }
      }
    },
    "/api/menus/{menu-id}": {
      "delete": {
        "tags": ["menu-controller"],
        "summary": "메뉴 삭제",
        "operationId": "deleteMenu",
        "parameters": [
          {
            "name": "menu-id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseVoid"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      },
      "patch": {
        "tags": ["menu-controller"],
        "summary": "메뉴 수정",
        "operationId": "patchMenu",
        "parameters": [
          {
            "name": "menu-id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MenuPatchRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseLong"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/booths/{booth-id}": {
      "get": {
        "tags": ["booth-controller"],
        "summary": "특정부스 조회",
        "operationId": "getBooth",
        "parameters": [
          {
            "name": "booth-id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBoothDetailResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["booth-controller"],
        "summary": "부스 삭제",
        "operationId": "deleteBooth_1",
        "parameters": [
          {
            "name": "booth-id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseVoid"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      },
      "patch": {
        "tags": ["booth-controller"],
        "summary": "부스 정보 수정",
        "operationId": "patchBooth",
        "parameters": [
          {
            "name": "booth-id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BoothPatchRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseLong"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/booths/{booth-id}/schedule": {
      "patch": {
        "tags": ["booth-controller"],
        "summary": "부스 스케쥴 수정",
        "operationId": "patchBoothSchedule",
        "parameters": [
          {
            "name": "booth-id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BoothSchedulePatchRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseLong"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/waiting/{boothId}/reserved": {
      "get": {
        "tags": ["waiting-controller"],
        "summary": "예약된 대기열 조회",
        "operationId": "getWaitingList",
        "parameters": [
          {
            "name": "boothId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseListWaitingInfo"
                }
              }
            }
          }
        }
      }
    },
    "/waiting/{boothId}/count": {
      "get": {
        "tags": ["waiting-controller"],
        "summary": "대기중인 팀의 수 조회",
        "operationId": "getWaitingCount",
        "parameters": [
          {
            "name": "boothId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseLong"
                }
              }
            }
          }
        }
      }
    },
    "/waiting/{boothId}/all": {
      "get": {
        "tags": ["waiting-controller"],
        "summary": "완료 포함 전체 웨이팅 조회(관리자용, 디버깅용)",
        "operationId": "getAllWaitingList",
        "parameters": [
          {
            "name": "boothId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseListWaitingInfo"
                }
              }
            }
          }
        }
      }
    },
    "/waiting/me/{deviceId}": {
      "get": {
        "tags": ["waiting-controller"],
        "summary": "내 RESERVED, CALLED, NOSHOW, COMPLETED 웨이팅 조회(device ID 기준으로!)",
        "operationId": "getMyWaitingList",
        "parameters": [
          {
            "name": "deviceId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseListWaitingInfo"
                }
              }
            }
          }
        }
      }
    },
    "/star/{starId}": {
      "get": {
        "tags": ["star-controller"],
        "summary": "특정 star 조회",
        "operationId": "findStarById",
        "parameters": [
          {
            "name": "starId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseStarInfo"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["star-controller"],
        "summary": "특정 star 삭제",
        "operationId": "deleteStar",
        "parameters": [
          {
            "name": "starId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseVoid"
                }
              }
            }
          }
        }
      }
    },
    "/star/search/{name}": {
      "get": {
        "tags": ["star-controller"],
        "summary": "name 기반 star 검색",
        "operationId": "searchStarByName",
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseListStarInfo"
                }
              }
            }
          }
        }
      }
    },
    "/stamps/{festival-id}": {
      "get": {
        "tags": ["stamp-controller"],
        "summary": "Stamp 기능이 있는 부스 조회 (festivalId별)",
        "operationId": "getStampBooths",
        "parameters": [
          {
            "name": "festival-id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseListBoothResponse"
                }
              }
            }
          }
        }
      }
    },
    "/stamps/festivals": {
      "get": {
        "tags": ["stamp-controller"],
        "summary": "Stamp 기능이 있는 festival 조회 (드롭다운용)",
        "operationId": "getStampFestivals",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseListStampEnabledFestivalResponse"
                }
              }
            }
          }
        }
      }
    },
    "/members/my": {
      "get": {
        "tags": ["member-controller"],
        "summary": "본인 정보 조회",
        "operationId": "getMyMember",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseMemberDetailResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      },
      "delete": {
        "tags": ["member-controller"],
        "summary": "회원 탈퇴",
        "operationId": "withDrawMe",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseLong"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/logout": {
      "get": {
        "tags": ["인증"],
        "summary": "사용자 로그아웃",
        "operationId": "logout",
        "parameters": [
          {
            "name": "RefreshToken",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseVoid"
                }
              }
            }
          }
        }
      }
    },
    "/festival/today": {
      "get": {
        "tags": ["festival-controller"],
        "summary": "오늘의 축제일정",
        "operationId": "getFestivalByDate",
        "parameters": [
          {
            "name": "date",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseListTodayFestivalInfo"
                }
              }
            }
          }
        }
      }
    },
    "/festival/region": {
      "get": {
        "tags": ["festival-controller"],
        "summary": "지역별 검색",
        "operationId": "getFestivalByRegion",
        "parameters": [
          {
            "name": "region",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseListFestivalSearchResponse"
                }
              }
            }
          }
        }
      }
    },
    "/festival/interest": {
      "get": {
        "tags": ["interest-controller"],
        "summary": "관심 축제 목록 조회",
        "description": "사용자가 등록한 모든 관심 축제의 ID 목록을 조회합니다.",
        "operationId": "getInterestList",
        "parameters": [
          {
            "name": "deviceId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "관심 축제 목록 조회에 성공했습니다.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseListLong"
                }
              }
            }
          }
        }
      }
    },
    "/festival/all": {
      "get": {
        "tags": ["festival-controller"],
        "summary": "전체 검색",
        "operationId": "getAllFestival",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseListFestivalSearchResponse"
                }
              }
            }
          }
        }
      }
    },
    "/festival/after": {
      "get": {
        "tags": ["festival-controller"],
        "summary": "다가오는 축제일정",
        "operationId": "getAfterFestival",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseListFestivalSearchResponse"
                }
              }
            }
          }
        }
      }
    },
    "/enroll/festival/{festivalId}": {
      "get": {
        "tags": ["enroll-controller"],
        "summary": "festival 기준 festival:star 등록정보 조회",
        "operationId": "getEnrollmentsByFestival",
        "parameters": [
          {
            "name": "festivalId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseListEnrollInfo"
                }
              }
            }
          }
        }
      }
    },
    "/api/likes/{booth-id}": {
      "get": {
        "tags": ["likes-controller"],
        "summary": "특정 부스의 좋아요 개수 조회",
        "operationId": "getLike",
        "parameters": [
          {
            "name": "booth-id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseLong"
                }
              }
            }
          }
        }
      }
    },
    "/api/booths/{festival-id}/booths": {
      "get": {
        "tags": ["booth-controller"],
        "summary": "해당축제 영업 중인 부스 전체조회",
        "operationId": "getBooths",
        "parameters": [
          {
            "name": "festival-id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseListBoothResponse"
                }
              }
            }
          }
        }
      }
    },
    "/admin/booth/{festival-id}/booths": {
      "get": {
        "tags": ["admin-controller"],
        "summary": "해당축제 부스 전체조회",
        "operationId": "getEveryBooths",
        "parameters": [
          {
            "name": "festival-id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseListBoothResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/admin/booth/{booth-id}": {
      "get": {
        "tags": ["admin-controller"],
        "summary": "특정부스 조회",
        "operationId": "getBooth_1",
        "parameters": [
          {
            "name": "booth-id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBoothDetailResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/waiting/{waitingId}": {
      "delete": {
        "tags": ["waiting-controller"],
        "summary": "관리자가 직접 웨이팅 삭제",
        "operationId": "removeWaiting",
        "parameters": [
          {
            "name": "waitingId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseWaitingInfo"
                }
              }
            }
          }
        }
      }
    },
    "/stamps/festival/{festival-id}": {
      "delete": {
        "tags": ["stamp-controller"],
        "summary": "페스티벌 스탬프 정보 삭제",
        "operationId": "deleteStampInfo",
        "parameters": [
          {
            "name": "festival-id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseLong"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/enroll/{enrollId}": {
      "delete": {
        "tags": ["enroll-controller"],
        "summary": "축제에 등록된 enroll 제거",
        "operationId": "removeEnroll",
        "parameters": [
          {
            "name": "enrollId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseVoid"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "CancelWaitingRequest": {
        "required": ["deviceId", "waitingId"],
        "type": "object",
        "properties": {
          "waitingId": {
            "type": "integer",
            "description": "대기정보 Id",
            "format": "int64"
          },
          "deviceId": {
            "type": "string",
            "description": "대기자 deviceId"
          }
        }
      },
      "ResponseWaitingInfo": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "data": {
            "$ref": "#/components/schemas/WaitingInfo"
          }
        }
      },
      "WaitingInfo": {
        "type": "object",
        "properties": {
          "boothId": {
            "type": "integer",
            "format": "int64"
          },
          "waitingId": {
            "type": "integer",
            "format": "int64"
          },
          "partySize": {
            "type": "integer",
            "format": "int32"
          },
          "tel": {
            "type": "string"
          },
          "deviceId": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "status": {
            "type": "string"
          },
          "waitingOrder": {
            "type": "integer",
            "format": "int32"
          },
          "boothName": {
            "type": "string"
          }
        }
      },
      "PostFcmRequest": {
        "type": "object",
        "properties": {
          "deviceId": {
            "type": "string"
          },
          "fcmToken": {
            "type": "string"
          }
        }
      },
      "ResponseString": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "data": {
            "type": "string"
          }
        }
      },
      "MenuStatusChangeRequest": {
        "required": ["menuStatus"],
        "type": "object",
        "properties": {
          "menuStatus": {
            "type": "string",
            "description": "메뉴 재고 상태",
            "example": "충분함 : ENOUGH(기본값), 50개 이하 : UNDER_50, 10개 이하 : UNDER_10, 품절 : SOLD_OUT",
            "enum": ["ENOUGH", "UNDER_50", "UNDER_10", "SOLD_OUT"]
          }
        }
      },
      "ResponseVoid": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "data": {
            "type": "object"
          }
        }
      },
      "PostWaitingRequest": {
        "required": [
          "boothId",
          "deviceId",
          "fcmToken",
          "partySize",
          "pinNumber",
          "tel"
        ],
        "type": "object",
        "properties": {
          "boothId": {
            "type": "integer",
            "description": "등록하고자 하는 Booth Id",
            "format": "int64"
          },
          "tel": {
            "type": "string",
            "description": "전화번호"
          },
          "deviceId": {
            "type": "string",
            "description": "등록자 deviceId"
          },
          "partySize": {
            "type": "integer",
            "description": "대기 인원",
            "format": "int32"
          },
          "pinNumber": {
            "type": "string",
            "description": "pinNumber"
          },
          "fcmToken": {
            "type": "string",
            "description": "fcmToken"
          }
        }
      },
      "ResponseBoolean": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "data": {
            "type": "boolean"
          }
        }
      },
      "PostTokenTestRequest": {
        "required": ["fcmToken"],
        "type": "object",
        "properties": {
          "fcmToken": {
            "type": "string",
            "description": "fcmToken"
          }
        }
      },
      "CheckPinRequest": {
        "required": ["boothId", "pinNumber"],
        "type": "object",
        "properties": {
          "boothId": {
            "type": "integer",
            "description": "확인하고자 하는 BoothId",
            "format": "int64"
          },
          "pinNumber": {
            "type": "string",
            "description": "pinNumber"
          }
        }
      },
      "ResponseLong": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "data": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "PostStarRequest": {
        "required": ["imgUrl", "name"],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "공연 출연자 이름"
          },
          "imgUrl": {
            "type": "string",
            "description": "공연 출연자 사진"
          }
        }
      },
      "StampRequest": {
        "required": ["boothId", "deviceId", "festivalId"],
        "type": "object",
        "properties": {
          "deviceId": {
            "type": "string",
            "description": "stamp를 찍을 deviceId"
          },
          "boothId": {
            "type": "integer",
            "description": "stamp를 찍을 BoothId",
            "format": "int64"
          },
          "festivalId": {
            "type": "integer",
            "description": "stamp를 찍을 FestivalId",
            "format": "int64"
          }
        }
      },
      "StampInfoCreateRequest": {
        "required": ["defaultImgUrl", "festivalId", "usedImgUrl"],
        "type": "object",
        "properties": {
          "festivalId": {
            "type": "integer",
            "description": "페스티벌 ID",
            "format": "int64"
          },
          "defaultImgUrl": {
            "type": "string",
            "description": "stamp를 찍기 전 이미지"
          },
          "usedImgUrl": {
            "type": "string",
            "description": "stamp를 찍은 후 이미지"
          }
        }
      },
      "PostSchoolRequest": {
        "required": [
          "address",
          "latitude",
          "longitude",
          "name",
          "region",
          "thumbnail"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "현재 비밀번호"
          },
          "region": {
            "type": "string",
            "description": "지역"
          },
          "address": {
            "type": "string",
            "description": "주소"
          },
          "latitude": {
            "type": "number",
            "description": "위도",
            "format": "double"
          },
          "longitude": {
            "type": "number",
            "description": "경도",
            "format": "double"
          },
          "thumbnail": {
            "type": "string",
            "description": "학교 썸네일"
          }
        }
      },
      "ClassInfo": {
        "type": "object",
        "properties": {
          "ignoreCase": {
            "type": "boolean"
          },
          "names": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "enum": {
            "type": "boolean"
          },
          "fieldInfos": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FieldInfo"
            }
          }
        }
      },
      "FieldInfo": {
        "type": "object",
        "properties": {
          "field": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string"
              },
              "modifiers": {
                "type": "integer",
                "format": "int32"
              },
              "synthetic": {
                "type": "boolean"
              },
              "declaredAnnotations": {
                "type": "array",
                "items": {
                  "type": "object"
                }
              },
              "accessible": {
                "type": "boolean",
                "deprecated": true
              },
              "genericType": {
                "type": "object",
                "properties": {
                  "typeName": {
                    "type": "string"
                  }
                }
              },
              "enumConstant": {
                "type": "boolean"
              },
              "annotatedType": {
                "type": "object",
                "properties": {
                  "annotations": {
                    "type": "array",
                    "items": {
                      "type": "object"
                    }
                  },
                  "declaredAnnotations": {
                    "type": "array",
                    "items": {
                      "type": "object"
                    }
                  },
                  "type": {
                    "type": "object",
                    "properties": {
                      "typeName": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "annotations": {
                "type": "array",
                "items": {
                  "type": "object"
                }
              }
            }
          },
          "name": {
            "type": "string"
          },
          "primitive": {
            "type": "boolean"
          },
          "genericType": {
            "type": "object",
            "properties": {
              "typeName": {
                "type": "string"
              }
            }
          },
          "final": {
            "type": "boolean"
          },
          "classInfo": {
            "$ref": "#/components/schemas/ClassInfo"
          },
          "tersMethodForField": {
            "type": "array",
            "writeOnly": true,
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                },
                "modifiers": {
                  "type": "integer",
                  "format": "int32"
                },
                "typeParameters": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string"
                      },
                      "bounds": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "typeName": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "annotatedBounds": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "annotations": {
                              "type": "array",
                              "items": {
                                "type": "object"
                              }
                            },
                            "declaredAnnotations": {
                              "type": "array",
                              "items": {
                                "type": "object"
                              }
                            },
                            "type": {
                              "type": "object",
                              "properties": {
                                "typeName": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      },
                      "typeName": {
                        "type": "string"
                      },
                      "annotations": {
                        "type": "array",
                        "items": {
                          "type": "object"
                        }
                      },
                      "declaredAnnotations": {
                        "type": "array",
                        "items": {
                          "type": "object"
                        }
                      }
                    }
                  }
                },
                "synthetic": {
                  "type": "boolean"
                },
                "declaredAnnotations": {
                  "type": "array",
                  "items": {
                    "type": "object"
                  }
                },
                "accessible": {
                  "type": "boolean",
                  "deprecated": true
                },
                "varArgs": {
                  "type": "boolean"
                },
                "parameterCount": {
                  "type": "integer",
                  "format": "int32"
                },
                "parameterAnnotations": {
                  "type": "array",
                  "items": {
                    "type": "array",
                    "items": {
                      "type": "object"
                    }
                  }
                },
                "genericParameterTypes": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "typeName": {
                        "type": "string"
                      }
                    }
                  }
                },
                "genericExceptionTypes": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "typeName": {
                        "type": "string"
                      }
                    }
                  }
                },
                "default": {
                  "type": "boolean"
                },
                "genericReturnType": {
                  "type": "object",
                  "properties": {
                    "typeName": {
                      "type": "string"
                    }
                  }
                },
                "bridge": {
                  "type": "boolean"
                },
                "defaultValue": {
                  "type": "object"
                },
                "annotatedReturnType": {
                  "type": "object",
                  "properties": {
                    "annotations": {
                      "type": "array",
                      "items": {
                        "type": "object"
                      }
                    },
                    "declaredAnnotations": {
                      "type": "array",
                      "items": {
                        "type": "object"
                      }
                    },
                    "type": {
                      "type": "object",
                      "properties": {
                        "typeName": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "annotatedParameterTypes": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "annotations": {
                        "type": "array",
                        "items": {
                          "type": "object"
                        }
                      },
                      "declaredAnnotations": {
                        "type": "array",
                        "items": {
                          "type": "object"
                        }
                      },
                      "type": {
                        "type": "object",
                        "properties": {
                          "typeName": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                },
                "parameters": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string"
                      },
                      "modifiers": {
                        "type": "integer",
                        "format": "int32"
                      },
                      "synthetic": {
                        "type": "boolean"
                      },
                      "annotations": {
                        "type": "array",
                        "items": {
                          "type": "object"
                        }
                      },
                      "declaredAnnotations": {
                        "type": "array",
                        "items": {
                          "type": "object"
                        }
                      },
                      "annotatedType": {
                        "type": "object",
                        "properties": {
                          "annotations": {
                            "type": "array",
                            "items": {
                              "type": "object"
                            }
                          },
                          "declaredAnnotations": {
                            "type": "array",
                            "items": {
                              "type": "object"
                            }
                          },
                          "type": {
                            "type": "object",
                            "properties": {
                              "typeName": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      },
                      "parameterizedType": {
                        "type": "object",
                        "properties": {
                          "typeName": {
                            "type": "string"
                          }
                        }
                      },
                      "varArgs": {
                        "type": "boolean"
                      },
                      "namePresent": {
                        "type": "boolean"
                      },
                      "declaringExecutable": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string"
                          },
                          "modifiers": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "typeParameters": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "name": {
                                  "type": "string"
                                },
                                "bounds": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "typeName": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                },
                                "genericDeclaration": {
                                  "type": "object"
                                },
                                "annotatedBounds": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "annotations": {
                                        "type": "array",
                                        "items": {
                                          "type": "object"
                                        }
                                      },
                                      "declaredAnnotations": {
                                        "type": "array",
                                        "items": {
                                          "type": "object"
                                        }
                                      },
                                      "type": {
                                        "type": "object",
                                        "properties": {
                                          "typeName": {
                                            "type": "string"
                                          }
                                        }
                                      }
                                    }
                                  }
                                },
                                "typeName": {
                                  "type": "string"
                                },
                                "annotations": {
                                  "type": "array",
                                  "items": {
                                    "type": "object"
                                  }
                                },
                                "declaredAnnotations": {
                                  "type": "array",
                                  "items": {
                                    "type": "object"
                                  }
                                }
                              }
                            }
                          },
                          "synthetic": {
                            "type": "boolean"
                          },
                          "declaredAnnotations": {
                            "type": "array",
                            "items": {
                              "type": "object"
                            }
                          },
                          "varArgs": {
                            "type": "boolean"
                          },
                          "annotatedParameterTypes": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "annotations": {
                                  "type": "array",
                                  "items": {
                                    "type": "object"
                                  }
                                },
                                "declaredAnnotations": {
                                  "type": "array",
                                  "items": {
                                    "type": "object"
                                  }
                                },
                                "type": {
                                  "type": "object",
                                  "properties": {
                                    "typeName": {
                                      "type": "string"
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "parameterCount": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "parameterAnnotations": {
                            "type": "array",
                            "items": {
                              "type": "array",
                              "items": {
                                "type": "object"
                              }
                            }
                          },
                          "genericParameterTypes": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "typeName": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "genericExceptionTypes": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "typeName": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "annotatedReturnType": {
                            "type": "object",
                            "properties": {
                              "annotations": {
                                "type": "array",
                                "items": {
                                  "type": "object"
                                }
                              },
                              "declaredAnnotations": {
                                "type": "array",
                                "items": {
                                  "type": "object"
                                }
                              },
                              "type": {
                                "type": "object",
                                "properties": {
                                  "typeName": {
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          },
                          "annotatedReceiverType": {
                            "type": "object",
                            "properties": {
                              "annotations": {
                                "type": "array",
                                "items": {
                                  "type": "object"
                                }
                              },
                              "declaredAnnotations": {
                                "type": "array",
                                "items": {
                                  "type": "object"
                                }
                              },
                              "type": {
                                "type": "object",
                                "properties": {
                                  "typeName": {
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          },
                          "annotatedExceptionTypes": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "annotations": {
                                  "type": "array",
                                  "items": {
                                    "type": "object"
                                  }
                                },
                                "declaredAnnotations": {
                                  "type": "array",
                                  "items": {
                                    "type": "object"
                                  }
                                },
                                "type": {
                                  "type": "object",
                                  "properties": {
                                    "typeName": {
                                      "type": "string"
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "annotations": {
                            "type": "array",
                            "items": {
                              "type": "object"
                            }
                          },
                          "accessible": {
                            "type": "boolean",
                            "deprecated": true
                          }
                        }
                      },
                      "implicit": {
                        "type": "boolean"
                      }
                    }
                  }
                },
                "annotatedReceiverType": {
                  "type": "object",
                  "properties": {
                    "annotations": {
                      "type": "array",
                      "items": {
                        "type": "object"
                      }
                    },
                    "declaredAnnotations": {
                      "type": "array",
                      "items": {
                        "type": "object"
                      }
                    },
                    "type": {
                      "type": "object",
                      "properties": {
                        "typeName": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "annotatedExceptionTypes": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "annotations": {
                        "type": "array",
                        "items": {
                          "type": "object"
                        }
                      },
                      "declaredAnnotations": {
                        "type": "array",
                        "items": {
                          "type": "object"
                        }
                      },
                      "type": {
                        "type": "object",
                        "properties": {
                          "typeName": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                },
                "annotations": {
                  "type": "array",
                  "items": {
                    "type": "object"
                  }
                }
              }
            }
          }
        }
      },
      "JsonFactory": {
        "type": "object"
      },
      "TokenResponse": {
        "type": "object",
        "properties": {
          "classInfo": {
            "$ref": "#/components/schemas/ClassInfo"
          },
          "accessToken": {
            "type": "string"
          },
          "tokenType": {
            "type": "string"
          },
          "expiresInSeconds": {
            "type": "integer",
            "format": "int64"
          },
          "refreshToken": {
            "type": "string"
          },
          "scope": {
            "type": "string"
          },
          "factory": {
            "$ref": "#/components/schemas/JsonFactory"
          },
          "unknownKeys": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            }
          },
          "empty": {
            "type": "boolean"
          }
        },
        "additionalProperties": {
          "type": "object"
        }
      },
      "MemberSignUpRequest": {
        "required": ["email", "password", "phoneNum", "schoolId"],
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "format": "email"
          },
          "password": {
            "type": "string",
            "description": "비밀번호"
          },
          "schoolId": {
            "type": "integer",
            "description": "학교Id",
            "format": "int64"
          },
          "phoneNum": {
            "type": "string",
            "description": "전화번호"
          }
        }
      },
      "AddMegaphoneRequest": {
        "required": ["boothId", "msgBody"],
        "type": "object",
        "properties": {
          "boothId": {
            "type": "integer",
            "description": "부스 Id",
            "format": "int64"
          },
          "msgBody": {
            "type": "string",
            "description": "전송할 메세지"
          }
        }
      },
      "LoginRequest": {
        "required": ["email", "password"],
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        }
      },
      "FileResponse": {
        "type": "object",
        "properties": {
          "imgUrl": {
            "type": "string"
          },
          "imgName": {
            "type": "string"
          }
        }
      },
      "ResponseFileResponse": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "data": {
            "$ref": "#/components/schemas/FileResponse"
          }
        }
      },
      "PostFestivalRequest": {
        "required": [
          "beginDate",
          "description",
          "endDate",
          "name",
          "schoolId",
          "thumbnail"
        ],
        "type": "object",
        "properties": {
          "schoolId": {
            "type": "integer",
            "description": "학교 Id",
            "format": "int64"
          },
          "beginDate": {
            "type": "string",
            "description": "시작 날짜",
            "format": "date"
          },
          "endDate": {
            "type": "string",
            "description": "종료 날짜",
            "format": "date"
          },
          "name": {
            "type": "string",
            "description": "축제의 이름"
          },
          "description": {
            "type": "string",
            "description": "축제 설명"
          },
          "thumbnail": {
            "type": "string",
            "description": "축제 썸네일"
          }
        }
      },
      "InterestRequest": {
        "required": ["deviceId"],
        "type": "object",
        "properties": {
          "deviceId": {
            "type": "string",
            "description": "deviceId"
          }
        }
      },
      "ErrorResponse": {
        "type": "object",
        "properties": {
          "code": {
            "type": "integer",
            "format": "int32"
          },
          "message": {
            "type": "string"
          }
        }
      },
      "PostEnrollRequest": {
        "required": ["festivalId", "starId", "visitDate"],
        "type": "object",
        "properties": {
          "festivalId": {
            "type": "integer",
            "description": "페스티벌 Id",
            "format": "int64"
          },
          "starId": {
            "type": "integer",
            "description": "공연 출연자 Id",
            "format": "int64"
          },
          "visitDate": {
            "type": "string",
            "description": "공연 출연자 방문일",
            "format": "date"
          }
        }
      },
      "MenuCreateRequest": {
        "required": ["name", "price"],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "메뉴의 이름 (최대 20자)"
          },
          "price": {
            "type": "integer",
            "description": "부스의 경고문(최대 100자)",
            "format": "int32"
          },
          "imgUrl": {
            "type": "string",
            "description": "이미지",
            "nullable": true
          },
          "menuStatus": {
            "type": "string",
            "description": "메뉴 재고 상태",
            "example": "충분함 : ENOUGH(기본값) / 50개 이하 : UNDER_50 / 10개 이하 : UNDER_10 / 품절 : SOLD_OUT",
            "enum": ["ENOUGH", "UNDER_50", "UNDER_10", "SOLD_OUT"]
          }
        }
      },
      "PostLikesRequest": {
        "required": ["boothId", "token"],
        "type": "object",
        "properties": {
          "boothId": {
            "type": "integer",
            "format": "int64"
          },
          "token": {
            "type": "string"
          }
        }
      },
      "BoothCreateRequest": {
        "required": [
          "category",
          "festivalId",
          "latitude",
          "location",
          "longitude",
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "maximum": 50,
            "minimum": 2,
            "type": "string",
            "description": "부스의 이름"
          },
          "category": {
            "type": "string",
            "description": "부스의 분류",
            "example": "BAR / FOOD / EVENT / NORMAL / MEDICAL / TOILET",
            "enum": ["BAR", "FOOD", "EVENT", "NORMAL", "MEDICAL", "TOILET"]
          },
          "description": {
            "maximum": 200,
            "type": "string",
            "description": "부스의 간단한 설명",
            "nullable": true
          },
          "detail": {
            "type": "string",
            "description": "부스의 설명",
            "nullable": true
          },
          "thumbnail": {
            "type": "string",
            "description": "부스의 썸네일",
            "nullable": true
          },
          "warning": {
            "maximum": 100,
            "type": "string",
            "description": "부스의 경고문",
            "nullable": true
          },
          "festivalId": {
            "type": "integer",
            "description": "부스의 페스티벌 아이디",
            "format": "int64"
          },
          "menus": {
            "type": "array",
            "description": "부스의 메뉴",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/MenuCreateRequest"
            }
          },
          "location": {
            "maximum": 40,
            "type": "string",
            "description": "위치 설명"
          },
          "latitude": {
            "type": "number",
            "description": "위도",
            "format": "double"
          },
          "longitude": {
            "type": "number",
            "description": "경도",
            "format": "double"
          },
          "scheduleList": {
            "type": "array",
            "description": "일정",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/BoothScheduleCreateRequest"
            }
          }
        }
      },
      "BoothScheduleCreateRequest": {
        "required": ["closeTime", "date", "openTime"],
        "type": "object",
        "properties": {
          "date": {
            "type": "string",
            "description": "날짜",
            "format": "date"
          },
          "openTime": {
            "$ref": "#/components/schemas/LocalTime"
          },
          "closeTime": {
            "$ref": "#/components/schemas/LocalTime"
          }
        },
        "description": "일정",
        "nullable": true
      },
      "LocalTime": {
        "type": "object",
        "properties": {
          "hour": {
            "type": "integer",
            "format": "int32"
          },
          "minute": {
            "type": "integer",
            "format": "int32"
          },
          "second": {
            "type": "integer",
            "format": "int32"
          },
          "nano": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "폐점 시간",
        "example": "HH:mm:ss"
      },
      "StampEnabledRequest": {
        "required": ["stampEnabled"],
        "type": "object",
        "properties": {
          "stampEnabled": {
            "type": "boolean",
            "description": "허용 여부"
          }
        }
      },
      "PasswordChangeRequest": {
        "required": ["currentPassword", "newPassword"],
        "type": "object",
        "properties": {
          "currentPassword": {
            "type": "string",
            "description": "현재 비밀번호"
          },
          "newPassword": {
            "type": "string",
            "description": "변경할 비밀번호"
          }
        }
      },
      "FestivalModifyRequest": {
        "required": ["name"],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "축제의 이름"
          },
          "description": {
            "type": "string"
          },
          "thumbnail": {
            "type": "string"
          },
          "beginDate": {
            "type": "string",
            "description": "시작 날짜",
            "format": "date"
          },
          "endDate": {
            "type": "string",
            "description": "종료 날짜",
            "format": "date"
          }
        }
      },
      "MenuPatchRequest": {
        "required": ["name", "price"],
        "type": "object",
        "properties": {
          "name": {
            "maximum": 20,
            "type": "string",
            "description": "메뉴 이름"
          },
          "price": {
            "type": "integer",
            "description": "메뉴 가격",
            "format": "int32"
          },
          "imgUrl": {
            "type": "string",
            "description": "메뉴 사진",
            "nullable": true
          },
          "menuStatus": {
            "type": "string",
            "description": "메뉴 재고 상태",
            "nullable": true,
            "example": "충분함 : ENOUGH(기본값), 50개 이하 : UNDER_50, 10개 이하 : UNDER_10, 품절 : SOLD_OUT",
            "enum": ["ENOUGH", "UNDER_50", "UNDER_10", "SOLD_OUT"]
          }
        }
      },
      "BoothPatchRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "category": {
            "type": "string",
            "enum": ["BAR", "FOOD", "EVENT", "NORMAL", "MEDICAL", "TOILET"]
          },
          "description": {
            "type": "string"
          },
          "detail": {
            "type": "string"
          },
          "thumbnail": {
            "type": "string"
          },
          "warning": {
            "type": "string"
          },
          "location": {
            "type": "string"
          },
          "enabled": {
            "type": "boolean"
          },
          "latitude": {
            "type": "number",
            "format": "double"
          },
          "longitude": {
            "type": "number",
            "format": "double"
          },
          "waitingEnabled": {
            "type": "boolean"
          }
        },
        "description": "부스 수정 요청, 수정할 부분만 기입"
      },
      "BoothSchedulePatchRequest": {
        "type": "object",
        "properties": {
          "scheduleList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BoothScheduleCreateRequest"
            }
          }
        }
      },
      "ResponseListWaitingInfo": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WaitingInfo"
            }
          }
        }
      },
      "ResponseListStarInfo": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StarInfo"
            }
          }
        }
      },
      "StarInfo": {
        "type": "object",
        "properties": {
          "starId": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          },
          "imgUrl": {
            "type": "string"
          }
        }
      },
      "ResponseStarInfo": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "data": {
            "$ref": "#/components/schemas/StarInfo"
          }
        }
      },
      "ResponseListStampRecordResponse": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StampRecordResponse"
            }
          }
        }
      },
      "StampRecordResponse": {
        "type": "object",
        "properties": {
          "stampRecordId": {
            "type": "integer",
            "format": "int64"
          },
          "boothId": {
            "type": "integer",
            "format": "int64"
          },
          "festivalId": {
            "type": "integer",
            "format": "int64"
          },
          "deviceId": {
            "type": "string"
          }
        }
      },
      "BoothResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          },
          "category": {
            "type": "string",
            "enum": ["BAR", "FOOD", "EVENT", "NORMAL", "MEDICAL", "TOILET"]
          },
          "description": {
            "type": "string"
          },
          "thumbnail": {
            "type": "string"
          },
          "location": {
            "type": "string"
          },
          "latitude": {
            "type": "number",
            "format": "double"
          },
          "longitude": {
            "type": "number",
            "format": "double"
          },
          "enabled": {
            "type": "boolean"
          },
          "waitingEnabled": {
            "type": "boolean"
          },
          "scheduleList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BoothScheduleResponse"
            }
          },
          "stampEnabled": {
            "type": "boolean"
          }
        }
      },
      "BoothScheduleResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "date": {
            "type": "string",
            "format": "date"
          },
          "openTime": {
            "$ref": "#/components/schemas/LocalTime"
          },
          "closeTime": {
            "$ref": "#/components/schemas/LocalTime"
          }
        }
      },
      "ResponseListBoothResponse": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BoothResponse"
            }
          }
        }
      },
      "ResponseListStampEnabledFestivalResponse": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StampEnabledFestivalResponse"
            }
          }
        }
      },
      "StampEnabledFestivalResponse": {
        "type": "object",
        "properties": {
          "festivalId": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          },
          "defaultImgUrl": {
            "type": "string"
          },
          "usedImgUrl": {
            "type": "string"
          }
        }
      },
      "BoothDetailResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          },
          "category": {
            "type": "string",
            "enum": ["BAR", "FOOD", "EVENT", "NORMAL", "MEDICAL", "TOILET"]
          },
          "description": {
            "type": "string"
          },
          "thumbnail": {
            "type": "string"
          },
          "warning": {
            "type": "string"
          },
          "location": {
            "type": "string"
          },
          "latitude": {
            "type": "number",
            "format": "double"
          },
          "longitude": {
            "type": "number",
            "format": "double"
          },
          "menus": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MenuResponse"
            }
          },
          "enabled": {
            "type": "boolean"
          },
          "waitingEnabled": {
            "type": "boolean"
          },
          "scheduleList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BoothScheduleResponse"
            }
          },
          "stampEnabled": {
            "type": "boolean"
          }
        }
      },
      "MemberDetailResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "email": {
            "type": "string"
          },
          "booths": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BoothDetailResponse"
            }
          },
          "schoolId": {
            "type": "integer",
            "format": "int64"
          },
          "phoneNum": {
            "type": "string"
          },
          "memberRole": {
            "type": "string",
            "enum": ["DEV", "ADMIN", "PENDING", "VERIFIED", "DENIED"]
          }
        }
      },
      "MenuResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          },
          "price": {
            "type": "integer",
            "format": "int32"
          },
          "imgUrl": {
            "type": "string"
          },
          "menuStatus": {
            "type": "string",
            "enum": ["ENOUGH", "UNDER_50", "UNDER_10", "SOLD_OUT"]
          }
        }
      },
      "ResponseListMemberDetailResponse": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MemberDetailResponse"
            }
          }
        }
      },
      "ResponseMemberDetailResponse": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "data": {
            "$ref": "#/components/schemas/MemberDetailResponse"
          }
        }
      },
      "FestivalSearchResponse": {
        "type": "object",
        "properties": {
          "festivalId": {
            "type": "integer",
            "format": "int64"
          },
          "schoolId": {
            "type": "integer",
            "format": "int64"
          },
          "thumbnail": {
            "type": "string"
          },
          "schoolName": {
            "type": "string"
          },
          "region": {
            "type": "string"
          },
          "festivalName": {
            "type": "string"
          },
          "beginDate": {
            "type": "string",
            "format": "date"
          },
          "endDate": {
            "type": "string",
            "format": "date"
          },
          "latitude": {
            "type": "number",
            "format": "double"
          },
          "longitude": {
            "type": "number",
            "format": "double"
          }
        }
      },
      "ResponseListFestivalSearchResponse": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FestivalSearchResponse"
            }
          }
        }
      },
      "ResponseListTodayFestivalInfo": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TodayFestivalInfo"
            }
          }
        }
      },
      "TodayFestivalInfo": {
        "type": "object",
        "properties": {
          "schoolId": {
            "type": "integer",
            "format": "int64"
          },
          "schoolName": {
            "type": "string"
          },
          "thumbnail": {
            "type": "string"
          },
          "festivalId": {
            "type": "integer",
            "format": "int64"
          },
          "festivalName": {
            "type": "string"
          },
          "beginDate": {
            "type": "string",
            "format": "date"
          },
          "endDate": {
            "type": "string",
            "format": "date"
          },
          "starList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StarInfo"
            }
          }
        }
      },
      "ResponseListLong": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "data": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            }
          }
        }
      },
      "EnrollInfo": {
        "type": "object",
        "properties": {
          "festivalId": {
            "type": "integer",
            "format": "int64"
          },
          "starId": {
            "type": "integer",
            "format": "int64"
          },
          "starName": {
            "type": "string"
          },
          "imgUrl": {
            "type": "string"
          }
        }
      },
      "ResponseListEnrollInfo": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EnrollInfo"
            }
          }
        }
      },
      "LikedBoothResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          },
          "category": {
            "type": "string",
            "enum": ["BAR", "FOOD", "EVENT", "NORMAL", "MEDICAL", "TOILET"]
          },
          "description": {
            "type": "string"
          },
          "thumbnail": {
            "type": "string"
          },
          "location": {
            "type": "string"
          },
          "latitude": {
            "type": "number",
            "format": "double"
          },
          "longitude": {
            "type": "number",
            "format": "double"
          },
          "warning": {
            "type": "string"
          }
        }
      },
      "ResponseListLikedBoothResponse": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LikedBoothResponse"
            }
          }
        }
      },
      "ResponseBoothDetailResponse": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "data": {
            "$ref": "#/components/schemas/BoothDetailResponse"
          }
        }
      }
    },
    "securitySchemes": {
      "JWT": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}
